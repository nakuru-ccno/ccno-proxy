<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>CCNO Evidence Upload</title>
<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: #fff;
    margin: 0; padding: 0;
    color: #0d47a1; /* dark blue */
  }
  header {
    display: flex;
    align-items: center;
    background: #b71c1c; /* red */
    padding: 15px 25px;
    color: white;
    font-weight: 700;
    font-size: 1.4em;
    box-shadow: 0 3px 8px rgba(0,0,0,0.15);
  }
  header img {
    height: 50px;
    margin-right: 20px;
  }
  .container {
    max-width: 650px;
    background: white;
    margin: 40px auto;
    padding: 30px 30px 40px;
    border-radius: 15px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    border: 2px solid #0d47a1; /* blue border */
  }
  label {
    display: block;
    margin-top: 18px;
    font-weight: 600;
    color: #b71c1c; /* red labels */
  }
  input[type="text"], select, input[type="file"] {
    width: 100%;
    padding: 10px 12px;
    margin-top: 7px;
    border: 2px solid #0d47a1; /* blue border */
    border-radius: 8px;
    font-size: 1em;
    transition: border-color 0.3s ease;
    color: #0d47a1;
  }
  input[type="text"]:focus, select:focus, input[type="file"]:focus {
    border-color: #b71c1c; /* red focus */
    outline: none;
  }
  button {
    margin-top: 28px;
    width: 100%;
    padding: 14px;
    font-size: 1.1em;
    background-color: #0d47a1; /* blue button */
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    font-weight: 700;
    transition: background-color 0.25s ease;
  }
  button:hover {
    background-color: #1565c0; /* lighter blue hover */
  }
  .spinner {
    display: none;
    margin: 20px 0;
    text-align: center;
    color: #b71c1c; /* red spinner */
    font-weight: 600;
  }
  .success {
    display: none;
    margin: 20px 0;
    padding: 15px;
    background: #bbdefb; /* light blue */
    color: #0d47a1;
    border-radius: 10px;
    font-weight: 600;
  }
  .error {
    display: none;
    margin: 20px 0;
    padding: 15px;
    background: #ffcdd2; /* light red */
    color: #b71c1c;
    border-radius: 10px;
    font-weight: 600;
  }
</style>
</head>
<body>

<header>
  <img src="https://www.nakurucountychiefnursingofficer.site/lovable-uploads/00cc8120-039e-4419-8b2b-e07e69d6fdd8.png" alt="Nakuru County Logo" />
  Nakuru County CCNO Evidence Upload
</header>

<div class="container">
  <label for="evidenceName">Evidence Name:</label>
  <input type="text" id="evidenceName" placeholder="e.g., CME on Family Planning Methods" />

  <label for="category">Evidence Category:</label>
  <select id="category">
    <option value="">Select Evidence Category</option>
    <option>C02 Referral System Improved</option>
    <option>C04 Operationalization of Health Facilities to Better Services</option>
    <option>C10 Theater Services Improved</option>
    <option>C11 In-Patient Services Improved</option>
    <option>C14 ANC (Antenatal Care)</option>
    <option>C15 POSTNATAL CARE</option>
    <option>C16 MPDSR (Maternal and Perinatal Death Surveillance and Response)</option>
    <option>C17 FAMILY PLANNING</option>
    <option>C18 IMMUNIZATION</option>
    <option>C21 HIV SERVICES</option>
    <option>C23 BURDEN OF CANCER REDUCED</option>
    <option>C27 SUPPORT SUPERVISION</option>
  </select>

  <label for="subCounty">Sub County:</label>
  <select id="subCounty">
    <option value="">Select Sub County</option>
    <option>Nakuru West Sub County</option>
    <option>Nakuru East Sub County</option>
    <option>Nakuru North Sub County</option>
    <option>Naivasha Sub County</option>
    <option>Rongai Sub County</option>
    <option>Kuresoi South Sub County</option>
    <option>Kuresoi North Sub County</option>
    <option>Subukia Sub County</option>
    <option>Molo Sub County</option>
    <option>Njoro Sub County</option>
    <option>Gilgil Sub County</option>
  </select>

  <label for="files">Choose PDF file(s) (max 3MB each, up to 5 files):</label>
  <input type="file" id="files" accept="application/pdf" multiple />

  <div class="spinner" id="spinner">⏳ Uploading...</div>
  <div class="success" id="success">✅ Upload successful!</div>
  <div class="error" id="error"></div>

  <button id="uploadBtn">Upload</button>
  <button type="button" id="resetBtn">Reset</button>
</div>

<script>
  const PROXY_URL = 'https://ccno-proxy-production.up.railway.app/upload-evidence';

  const evidenceNameInput = document.getElementById('evidenceName');
  const categorySelect = document.getElementById('category');
  const subCountySelect = document.getElementById('subCounty');
  const filesInput = document.getElementById('files');
  const spinner = document.getElementById('spinner');
  const successMsg = document.getElementById('success');
  const errorMsg = document.getElementById('error');
  const uploadBtn = document.getElementById('uploadBtn');
  const resetBtn = document.getElementById('resetBtn');

  function resetForm() {
    evidenceNameInput.value = '';
    categorySelect.value = '';
    subCountySelect.value = '';
    filesInput.value = '';
    successMsg.style.display = 'none';
    errorMsg.style.display = 'none';
  }

  function showError(msg) {
    errorMsg.textContent = msg;
    errorMsg.style.display = 'block';
    successMsg.style.display = 'none';
    spinner.style.display = 'none';
  }

  function showSuccess() {
    successMsg.style.display = 'block';
    errorMsg.style.display = 'none';
    spinner.style.display = 'none';
  }

  async function upload() {
    const evidenceName = evidenceNameInput.value.trim();
    const category = categorySelect.value;
    const subCounty = subCountySelect.value;
    const files = filesInput.files;

    if (!evidenceName || !category || !subCounty) {
      showError('Please fill in all required fields.');
      return;
    }
    if (files.length === 0) {
      showError('Please select at least one PDF file.');
      return;
    }
    if (files.length > 5) {
      showError('You can upload a maximum of 5 files.');
      return;
    }

    for (let f of files) {
      if (f.size > 3 * 1024 * 1024) {
        showError(`File ${f.name} exceeds the 3MB size limit.`);
        return;
      }
      if (f.type !== 'application/pdf') {
        showError(`File ${f.name} is not a PDF.`);
        return;
      }
    }

    spinner.style.display = 'block';
    successMsg.style.display = 'none';
    errorMsg.style.display = 'none';

    try {
      const fileData = await Promise.all(
        Array.from(files).map(
          (file) =>
            new Promise((resolve, reject) => {
              const reader = new FileReader();
              reader.onload = (e) => {
                const base64 = e.target.result.split(',')[1];
                resolve({ name: file.name, type: file.type, data: base64 });
              };
              reader.onerror = (e) => reject(e);
              reader.readAsDataURL(file);
            })
        )
      );

      const payload = {
        evidenceName,
        category,
        subCounty,
        files: fileData,
      };

      const response = await fetch(PROXY_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      });

      if (!response.ok) {
        const errorText = await response.text();
        throw new Error(`Server error: ${errorText}`);
      }

      const data = await response.json();

      if (data.success) {
        showSuccess();
        resetForm();
      } else {
        showError(data.message || 'Upload failed');
      }
    } catch (error) {
      showError('Upload failed: ' + error.message);
    }
  }

  uploadBtn.addEventListener('click', upload);
  resetBtn.addEventListener('click', resetForm);
</script>

</body>
</html>
